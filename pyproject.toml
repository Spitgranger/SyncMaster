[project]
name = "capstone"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aws-lambda-powertools==3.4.0",
    "boto3==1.35.90",
    "botocore==1.35.90",
    "cachetools==5.5.2",
    "pydantic[email]==2.10.4",
]

[dependency-groups]
dev = [
    "bandit>=1.8.0",
    "cfn-lint==1.32.1",
    "coverage==7.6.10",
    "coverage-threshold==0.5.0",
    "joserfc>=1.0.2",
    "moto==5.0.25",
    "mypy==1.14.1",
    "pylint==3.3.6",
    "pytest==8.3.5",
    "pytest-cov==6.0.0",
    "pytest-env==1.1.5",
    "pytest-socket==0.7.0",
    "requests==2.32.3",
    "ruff==0.11.2",
    "types-cachetools==5.5.*",
]

[tool.pytest.ini_options]
pythonpath = "src"
addopts = "--disable-socket --cov src/backend -vv"
testpaths = "test/backend/unit"
env = [
    "LOG_LEVEL=DEBUG",
    "AWS_ACCESS_KEY_ID=testing",
    "AWS_SECRET_ACCESS_KEY=testing",
    "AWS_SECURITY_TOKEN=testing",
    "AWS_SESSION_TOKEN=testing",
    "AWS_DEFAULT_REGION=us-east-1",
    "DOCUMENT_STORAGE_BUCKET_NAME=test_document_bucket",
    "DOCUMENT_STORAGE_BUCKET_READ_ROLE=arn:aws:iam::123456789012:role/document_s3_read_role",
    "DOCUMENT_STORAGE_BUCKET_WRITE_ROLE=arn:aws:iam::123456789012:role/document_s3_write_role",
    "USER_POOL_CLIENT_ID=aeffa230awe24",
    "TABLE_NAME=test_table",
    "TABLE_READ_ROLE=arn:aws:iam::123456789012:role/table_read_role",
    "TABLE_WRITE_ROLE=arn:aws:iam::123456789012:role/table_write_role",
    "COGNITO_ACCESS_ROLE=arn:aws:iam::123456789012:role/cognito_access_role"
]

[tool.coverage.run]
branch = true

[coverage-threshold]
line_coverage_min = 95
branch_coverage_min = 90

[tool.ruff]
src = ["src/backend"]
line-length = 100

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint]
select = ["I"]

[tool.pylint.'MAIN']
load-plugins="pylint.extensions.docparams"
accept-no-param-doc="no"
disable=["too-many-locals", "too-many-positional-arguments", "too-many-arguments", "duplicate-code"]

[tool.pylint.'DOCSTRING']
default-docstring-type="sphinx"

[tool.mypy]
disable_error_code="prop-decorator"

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
]
ignore_missing_imports = true

[tool.pyright]
executionEnvironments = [{ root = "src/backend" }]
typeCheckingMode = "standard"
venv = ".venv"
venvPath = "."
